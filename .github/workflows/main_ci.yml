name: Basis Continuous Integration (CI)

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]
# Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:
  
jobs:
  test-and-publish:
    name: Main CI/CD flow
    runs-on: ubuntu-20.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      #   with:
      #     lfs: true
      # - name: Checkout LFS objects
      #   run: git lfs checkout
              
      # Github made me use this ...
      - name: Stitch together split non_fastai_model models
        run: cat $PWD/ColoringMicroservice/ColorizationApi/Models/0.gz.part* > $PWD/ColoringMicroservice/ColorizationApi/Models/non_fastai_model.pt

      - name: Stitch together split fastai_model_20 models
        run: cat $PWD/ColoringMicroservice/ColorizationApi/Models/1.gz.part* > $PWD/ColoringMicroservice/ColorizationApi/Models/fastai_model_20.pt

      - name: Stitch together split fastai_model_40 models
        run: cat $PWD/ColoringMicroservice/ColorizationApi/Models/2.gz.part* > $PWD/ColoringMicroservice/ColorizationApi/Models/fastai_model_40.pt

      - name: Stitch together split res18_unet_20 models
        run: cat $PWD/ColoringMicroservice/ColorizationApi/Models/1.1.gz.part* > $PWD/ColoringMicroservice/ColorizationApi/Models/res18_unet_20.pt

      - name: Stitch together split res18_unet_40 models
        run: cat $PWD/ColoringMicroservice/ColorizationApi/Models/2.1.gz.part* > $PWD/ColoringMicroservice/ColorizationApi/Models/res18_unet_40.pt

      - name: Remove the split parts
        run: rm -rf $(ls -I "*.pt" $PWD/ColoringMicroservice/ColorizationApi/Models/)

      - name: Build docker image
        run: docker build . -t coloring_microservice:latest

      - name: Run Django tests
        run: docker container run --rm -e command="python manage.py test" coloring_microservice:latest

      - name: Log in to Docker Hub
        if: ${{ github.event_name == 'push' && steps.extract_branch.outputs.branch == 'main' }}
        run: docker login --username=${{ secrets.DOCKERHUB_USERNAME }} --password=${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Tag the built image
        if: ${{ github.event_name == 'push' && steps.extract_branch.outputs.branch == 'main' }}
        run: docker tag coloring_microservice:latest ${{ secrets.DOCKERHUB_USERNAME }}/coloring_microservice:latest

      - name: Push to Docker hub
        if: ${{ github.event_name == 'push' && steps.extract_branch.outputs.branch == 'main' }}
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/coloring_microservice:latest
